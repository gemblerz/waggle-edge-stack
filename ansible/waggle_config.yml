
- name: waggle_config
  hosts: all
  become: yes
  #remote_user: root
  vars: 
    timezone_internal: "none"

  tasks:
    

    - name: set timezone variable if defined
      set_fact:
        timezone_internal: "{{timezone}}"
      when: timezone is defined

    - name: set timezone
      timezone:
        name: "{{timezone_internal}}"
      when: timezone_internal != "none"
    
    - fail: 
        msg: "Bailing out: this play requires variable 'beekeeper_registration_host'"
      when: beekeeper_registration_host is not defined

    - fail: 
        msg: "Bailing out: this play requires variable 'beekeeper_registration_port'"
      when: beekeeper_registration_port is not defined
    

      # TODO decide which part of config belongs in which playbook
    - name: config
      copy:
        dest: "/etc/waggle/config.ini"
        content: |
          # WARNING: Do not edit this file directly, this file is written by an ansible playbook
          [system]
          devmode = true

          # by default this should be generated from the mac-address of the network device
          # e.g. 0000000000000001
          node-id-override = {{node_id}} 
          
          [registration]
          host={{beekeeper_registration_host}}
          port={{beekeeper_registration_port}}
          user=sage_registration

          [hardware]
          # use network-interface if default does not work
          # e.g. enp0s3 , eth0
          # network-interface = {{ ansible_default_ipv4.interface }}
   
    - name: check private/register.pem-cert.pub
      become: no
      local_action: stat path=private/register.pem-cert.pub
      register: register_cert

    - name: Copy register.pem-cert.pub if exists
      copy:
        src: private/register.pem-cert.pub
        dest: /etc/waggle/sage_registration-cert.pub
        owner: root
        group: root
        mode: '0644'
      when: register_cert.stat.exists
    
    - name: check private/register.pem
      become: no
      local_action: stat path=private/register.pem
      register: register_pem

    - name: Copy register.pem if exists
      copy:
        src: private/register.pem
        dest: /etc/waggle/sage_registration
        owner: root
        group: root
        mode: '0600'
      when: register_pem.stat.exists

    - name: check private/known_hosts
      become: no
      local_action: stat path=private/known_hosts
      register: known_hosts

    # TODO this may not be ideal as it would overwrite an existing file
    - name: Copy known_hosts if exists
      copy:
        src: private/known_hosts
        dest: /etc/ssh/ssh_known_hosts
        owner: root
        group: root
        mode: '0644'
      when: known_hosts.stat.exists


    - name: Make sure k3s is running
      systemd:
        state: started
        name: k3s

    # speed-up, otherwise have to wait up to 3 minutes
    - name: Restart sagebk-registration.service
      systemd:
        state: restarted
        name: sagebk-registration.service

    # speed-up, otherwise have to wait up to 3 minute
    - name: Restart sagebk-reverse-tunnel.service
      systemd:
        state: restarted
        name: sagebk-reverse-tunnel.service


    - name: Wait for nodes to be ready
      shell: "kubectl get nodes"
      register: nodes
      until:      
        - '" Ready "  in nodes.stdout'      
      retries: 20
      delay: 2

    - name: Creates directory
      file:
        path: /opt/sage/kubernetes
        state: directory

    - name: Ansible copy file to remote server
      copy:
        # ansible expects files in subfolder "files" (which does not exist), but we can get outside using "../"
        src: ../kubernetes
        dest: /opt/sage/


    - name: load kubernetes resources
      command: kubectl apply -k /opt/sage/kubernetes/    